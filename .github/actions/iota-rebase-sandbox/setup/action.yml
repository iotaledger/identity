name: "iota-private-network setup"
description: "Setup IOTA Sandbox"

inputs:
  platform:
    description: "Platform to download binary for (linux or macos)"
    required: true
    default: "linux"

runs:
  using: composite
  steps:
    - name: Set up IOTA Node
      shell: bash
      run: |
        set -e
        mkdir -p iota
        cd iota

        # Set platform
        PLATFORM="${{ inputs.platform }}"
        echo "Looking for platform: $PLATFORM"

        # Try to get latest releases with action's auth token (-> increased request limit)
        CODE_AND_BODY=$(curl \
          "https://api.github.com/repos/iotaledger/iota/releases/latest" \
          -s \
          -w "\n%{http_code}" \
          --header "authorization: Bearer ${{ secrets.GITHUB_TOKEN }}")
        CODE=$(tail -n1 <<< "$CODE_AND_BODY")
        BODY=$(sed '$ d' <<< "$CODE_AND_BODY")

        # Check response status
        if [[ "$CODE" != 2** ]]
        then
          echo "IOTA release check failed with status $CODE"
          echo "$BODY"
          exit 1
        fi

        # Get download link for platform
        DOWNLOAD_URL=$(jq -r --arg p "$PLATFORM" '.assets[] | select(.name | contains($p)) | .browser_download_url' <<< "$BODY")

        # Download and extract
        echo "Downloading from: $DOWNLOAD_URL"
        curl -L -o iota.tar.gz $DOWNLOAD_URL
        tar -xzf iota.tar.gz

        echo "$PWD" >> $GITHUB_PATH
        export PATH="$PWD:$PATH"

        which iota || echo "iota not found in PATH"
        ls -la "$PWD"
    - name: Start the Network
      shell: bash
      working-directory: iota
      run: |
        # Clear previous configuration
        rm -rf ~/.iota || true 
        # Start the network
        iota start --with-faucet &
