name: 'publish-stronghold-nodejs'
description: 'Publishes stronghold nodejs bindings to npm'
inputs:
  tag:
    description: 'Which npm tag to publish under e.g. `dev`, will default to `latest`'
    required: false
  npm-token:
    description: 'used for authenticating towards npm'
    required: true
  input-artifact-name:
    description: "Name used for the input stronghold binding build artifact"
    required: true
  dry-run:
    description: "'true' = only log potential result; 'false' = publish'"
    required: true

runs:
  using: "composite"
  steps:
    - name: Setup node
      uses: actions/setup-node@v3
      with:
        node-version: 18
        check-latest: true

    - name: Install dependencies
      shell: bash
      working-directory: bindings/stronghold-nodejs
      run: npm ci --ignore-scripts --legacy-peer-deps

    - name: Download binary artifacts
      uses: actions/download-artifact@v3
      with:
        name: ${{ inputs.input-artifact-name }}
        path: bindings/stronghold-nodejs/artifacts

    - name: Download dist artifacts
      uses: actions/download-artifact@v3
      with:
        name: ${{ inputs.input-artifact-name }}-dist
        path: bindings/stronghold-nodejs/dist

    - name: Create npm folder
      shell: bash
      working-directory: bindings/stronghold-nodejs
      run: |
        npm run create-npm-dir

    - name: Move artifacts
      shell: bash
      working-directory: bindings/stronghold-nodejs
      run: npm run artifacts

    - name: List packages
      shell: bash
      working-directory: bindings/stronghold-nodejs
      run: ls -R

    - name: Publish
      shell: bash
      working-directory: bindings/stronghold-nodejs
      env:
        NODE_AUTH_TOKEN: ${{ inputs.npm-token }}
      # will publish 'latest' tag if no tag is passed
      run: |
        echo "//registry.npmjs.org/:_authToken=${{ inputs.npm-token }}" >> ~/.npmrc
        npm publish $(if [ ${{ inputs.dry-run }} != 'false' ]; then echo --dry-run; fi) $(if [ ${{ inputs.tag }} != '' ]; then echo --tag ${{ inputs.tag }}; fi) --access public
