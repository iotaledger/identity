name: 'setup-sccache'
description: 'Setup sccache.'
inputs:
  os:
    description: 'OS of the runner, used for sccache installation and start.'
    required: true
runs:
  using: "composite"
  steps:

    - name: Install sccache (macos-latest)
      if: inputs.os == 'macos-latest'
      shell: sh
      run: |
        brew update --preinstall
        brew install sccache

    - name: Install sccache (ubuntu-latest)
      if: inputs.os == 'ubuntu-latest'
      shell: sh
      run: |
        SCCACHE_DOWNLOAD_LINK=https://github.com/mozilla/sccache/releases/download
        SCCACHE_VERSION=v0.2.15
        SCCACHE_PREFIX="sccache-$SCCACHE_VERSION-x86_64-unknown-linux-musl"
        SCCACHE_TAR="${SCCACHE_PREFIX}.tar.gz"
        DOWNLOAD_LINK="${SCCACHE_DOWNLOAD_LINK}/${SCCACHE_VERSION}/${SCCACHE_TAR}"
        curl -L "${DOWNLOAD_LINK}" --output ${SCCACHE_TAR}
        echo "$(curl -L ${DOWNLOAD_LINK}.sha256)  ${SCCACHE_TAR}" | shasum -a 256 --check --status
        tar xzf ${SCCACHE_TAR}
        BIN_DIR="$HOME/.local/bin"
        mkdir -p ${BIN_DIR}
        mv -f ${SCCACHE_PREFIX}/sccache ${BIN_DIR}/sccache
        chmod a+x "${BIN_DIR}/sccache"
        echo ${BIN_DIR} >> $GITHUB_PATH

    - name: Install sccache (windows-latest)
      if: inputs.os == 'windows-latest'
      shell: pwsh
      run: |
        Invoke-Expression (New-Object System.Net.WebClient).DownloadString('https://get.scoop.sh')
        # use preinstalled 7-zip to avoid unreliable installs
        scoop config '7ZIPEXTRACT_USE_EXTERNAL' $true
        scoop install sccache
        echo "${HOME}/scoop/apps/sccache/current" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
  
    - name: Start sccache
      if: inputs.os == 'macos-latest' || inputs.os == 'ubuntu-latest'
      shell: sh
      run: |
        sccache --start-server
        sccache -s

    - name: Start sccache
      if: inputs.os == 'windows-latest'
      shell: 'pwsh'
      run: |
        sccache --start-server
        sccache -s