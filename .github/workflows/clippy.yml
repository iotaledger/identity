name: Clippy

on:
  push:
    branches:
      - main
      - dev
  pull_request:
    branches:
      - main
      - dev
      - epic/*
    paths:
      - '.github/workflows/clippy.yml'
      - '**.rs'
      - '**.toml'

jobs:
  clippy:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false

    steps:
      - uses: actions/checkout@v2
      - name: Install clippy with stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          target: wasm32-unknown-unknown
          override: true
          components: clippy

      # Download a pre-compiled wasm-bindgen binary.
      - name: Install wasm-bindgen-cli
        uses: jetli/wasm-bindgen-action@24ba6f9fff570246106ac3f80f35185600c3f6c9

      - name: core clippy check
        uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --all-targets --all-features -- -D warnings
          name: core

      - name: wasm clippy check
        uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --manifest-path ./bindings/wasm/Cargo.toml --target wasm32-unknown-unknown --all-targets --all-features -- -D warnings
          name: wasm

      - name: stronghold-nodejs clippy check
        uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --manifest-path ./bindings/stronghold-nodejs/Cargo.toml --all-targets --all-features -- -D warnings
          name: stronghold-nodejs

      - name: libjose clippy check
        uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --manifest-path ./libjose/Cargo.toml --all-targets --all-features -- -D warnings
          name: libjose
