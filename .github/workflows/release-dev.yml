name: Release Dev

on:
  workflow_dispatch:
jobs:
  release-dev:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          # Number of commits to fetch. 0 indicates all history for all branches and tags.
          fetch-depth: 0
      - name: Determine next version
        run: |
          updateVersion()
          {
            [[ ${1} =~ ^(.*[^0-9])?([0-9]+)$ ]]  && \
              [[ ${#BASH_REMATCH[1]} -gt 0 ]] && \
                printf "%s%0${#BASH_REMATCH[2]}d" "${BASH_REMATCH[1]}" "$((10#${BASH_REMATCH[2]} + 1 ))" || \
                printf "%0${#BASH_REMATCH[2]}d" "$((10#${BASH_REMATCH[2]} + 1))" || \
              printf "${1}"
          }
          LATEST_DEV_TAG=$(git tag --list --sort=-version:refname "dev-*" | head -n 1)
          echo LATEST_DEV_TAG=$LATEST_DEV_TAG
          if [[ $LATEST_DEV_TAG == '' ]]; then
            NEW_DEV_TAG=dev-1
          else
            NEW_DEV_TAG=$(updateVersion $LATEST_DEV_TAG)
          fi
          echo NEW_DEV_TAG=$NEW_DEV_TAG
          NEXTVERSION=$NEW_DEV_TAG

          echo NEXTVERSION=$NEXTVERSION
          echo NEXTVERSION=$NEXTVERSION >> $GITHUB_ENV
          echo LATEST_DEV_TAG=$LATEST_DEV_TAG >> $GITHUB_ENV
      - name: Prepare repository
        run: |
          GITHUB_REPOSITORY_USER=$( echo $GITHUB_REPOSITORY | awk -F'/' '{print $1}') 
          GITHUB_REPOSITORY_PROJECT=$( echo $GITHUB_REPOSITORY | awk -F'/' '{print $2}') 

          echo GITHUB_REPOSITORY_USER=$GITHUB_REPOSITORY_USER
          echo GITHUB_REPOSITORY_PROJECT=$GITHUB_REPOSITORY_PROJECT

          echo GITHUB_REPOSITORY_USER=$GITHUB_REPOSITORY_USER >> $GITHUB_ENV
          echo GITHUB_REPOSITORY_PROJECT=$GITHUB_REPOSITORY_PROJECT >> $GITHUB_ENV
      - name: Run github-changelog-generator
        uses: docker://githubchangeloggenerator/github-changelog-generator
        with:
          args: >
            --user ${{ env.GITHUB_REPOSITORY_USER }}
            --project ${{ env.GITHUB_REPOSITORY_PROJECT }} 
            --token ${{ secrets.GITHUB_TOKEN }} 
            --no-author 
            --future-release ${{ env.NEXTVERSION }} 
            --no-issues
            --verbose
      - name: Run github-changelog-generator for release
        uses: docker://githubchangeloggenerator/github-changelog-generator
        with:
          args: >
            --user ${{ env.GITHUB_REPOSITORY_USER }}
            --project ${{ env.GITHUB_REPOSITORY_PROJECT }} 
            --token ${{ secrets.GITHUB_TOKEN }} 
            --no-author 
            --future-release ${{ env.NEXTVERSION }}
            --since-tag ${{ env.LATEST_DEV_TAG }}
            --output RELEASE_CHANGELOG.md
            --no-issues
            --verbose
      - name: Log CHANGELOG.md
        run: cat CHANGELOG.md
      - name: Commit changes
        run: |
          NEXTVERSION=${{ env.NEXTVERSION }}
          if [[ $(git diff --stat) == '' ]]; then
            echo 'CHANGELOG.md unmodified'
            exit 0
          fi
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add -f CHANGELOG.md
          git commit -m "generate Changelog"
          git tag -a -m $NEXTVERSION $NEXTVERSION
          git push --follow-tags
      - name: Create dev release
        uses: softprops/action-gh-release@v1
        with:
          name: ${{ env.NEXTVERSION }}
          tag_name: ${{ env.NEXTVERSION }}
          body_path: RELEASE_CHANGELOG.md
          prerelease: true
      - name: Release to npm
        uses: './.github/actions/release/release-npm'
        with:
          tag: dev


      
