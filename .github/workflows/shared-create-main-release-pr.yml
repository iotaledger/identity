name: Shared / Create Main Release PR

on:
  workflow_call:
    inputs:
      tag-prefix:
        description: "will be prepended to tag-base"
        required: false
        type: string
      tag-base:
        description: "the base version of the release"
        required: true
        type: string
      main-tag-regex:
        description: "the regex to find all related main releases"
        required: true
        type: string
      changelog-path:
        description: "path to the changelog file"
        required: false
        default: ./CHANGELOG.md
        type: string
      changelog-config-path:
        description: "path to the changelog config"
        required: true
        type: string
      pr-body-text:
        description: "text to be included in the PR"
        required: false
        type: string
      release-target:
        description: "target of the release (rust|wasm)"
        required: true
        type: string
    secrets:
      GPG_PRIVATE_KEY:
        description: "GPG private key for signing commits and tags"
        required: true
      GPG_PASSPHRASE:
        description: "GPG private passphrase for signing commits and tags"
        required: true
        
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          # Number of commits to fetch. 0 indicates all history for all branches and tags.
          fetch-depth: 0
          ref: main

      - name: Validate version
        run: |
          VERSION=${{ inputs.tag-prefix }}${{ inputs.tag-base }}
          if ! [[ $VERSION =~ ${{ inputs.main-tag-regex }} ]]; then
            echo unrecognized version $VERSION, must match ${{ inputs.main-tag-regex }}
            exit 1
          fi
          if [ $(git tag -l "$VERSION") ]; then
             echo $VERSION already exists
            exit 1
          fi

      - name: Determine Excluded Tags
        run: |

          # joins an array with a delimiter
          function join_by { local IFS="$1"; shift; echo "$*"; }

          # create a list of tags that are unrelated to the current release
          ALL_TAGS=$(git tag -l)
          temp_array=()
          for value in ${ALL_TAGS[@]}
          do
              if ! [[ $value =~ ${{ inputs.main-tag-regex }} ]]; then
                temp_array+=($value)
              fi
          done
          UNRELATED_TAGS=$(join_by , "${temp_array[@]}")
          unset temp_array
          echo UNRELATED_TAGS=$UNRELATED_TAGS

          # set variables
          FIRST="--exclude-tags "
          SECOND=$UNRELATED_TAGS
          EXCLUDE_ARG=$FIRST$SECOND
          echo EXCLUDE_ARG=$EXCLUDE_ARG
          echo EXCLUDE_ARG=$EXCLUDE_ARG >> $GITHUB_ENV

      - name: Prepare Repository For Changelog Generator
        run: |
          GITHUB_REPOSITORY_USER=$( echo $GITHUB_REPOSITORY | awk -F'/' '{print $1}') 
          GITHUB_REPOSITORY_PROJECT=$( echo $GITHUB_REPOSITORY | awk -F'/' '{print $2}') 

          echo GITHUB_REPOSITORY_USER=$GITHUB_REPOSITORY_USER
          echo GITHUB_REPOSITORY_PROJECT=$GITHUB_REPOSITORY_PROJECT

          echo GITHUB_REPOSITORY_USER=$GITHUB_REPOSITORY_USER >> $GITHUB_ENV
          echo GITHUB_REPOSITORY_PROJECT=$GITHUB_REPOSITORY_PROJECT >> $GITHUB_ENV

      - name: Run github-changelog-generator
        uses: docker://githubchangeloggenerator/github-changelog-generator # TODO pin version/hash
        with:
          args: >
            --output ${{ inputs.changelog-path }}
            --config-file ${{ inputs.changelog-config-path }}
            --user ${{ env.GITHUB_REPOSITORY_USER }}
            --project ${{ env.GITHUB_REPOSITORY_PROJECT }} 
            --token ${{ secrets.GITHUB_TOKEN }} 
            --future-release ${{ inputs.tag-prefix }}${{ inputs.tag-base }} 
            ${{ env.EXCLUDE_ARG }}

      - name: Log ${{ inputs.changelog-path }}
        run: cat ${{ inputs.changelog-path }}

      - name: Check Changelog For Modification
        run: |
          git add .
          if [[ $(git diff --stat --staged) == '' ]]; then
            echo 'repository unmodified'
            exit 1
          fi

      - name: Import GPG key
        id: import-gpg
        uses: crazy-max/ghaction-import-gpg@v4 # TODO pin commit
        with:
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.GPG_PASSPHRASE }}
          git_user_signingkey: true
          git_commit_gpgsign: true
          git_tag_gpgsign: true

      - name: Commit changelog
        run: |
          git add .
          git commit -m "generate changelog"

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true

      - name: Install cargo-release
        uses: actions-rs/cargo@v1
        with:
          command: install
          args: cargo-release

      - name: Install cargo-edit # to use cargo add 
        uses: actions-rs/cargo@v1
        if: ${{inputs.release-target == 'rust'}}
        with:
          command: install
          args: cargo-edit

      - name: Replace identity version in Wasm bindings
        if: ${{inputs.release-target == 'rust'}}
        working-directory: bindings/wasm
        run: |
          cargo add identity@=${{ inputs.tag-base }} --path=../../identity

      - name: Commit changes
        if: ${{inputs.release-target == 'rust'}}
        run: |
          git add .
          if [[ $(git diff --stat --staged) == '' ]]; then
            echo 'repository unmodified'
            exit 1
          fi
          git commit -m "Bump Wasm Identity dependency version"
      
      - name: Bump Rust version
        # cargo-release creates a signed commit automatically
        if: ${{inputs.release-target == 'rust'}}
        run: |
          cargo release --workspace --config ./release.toml --no-tag --no-publish --no-push --no-confirm ${{ inputs.tag-base }} --execute

      - name: Bump Wasm bindings version
        # cargo-release creates a signed commit automatically
        if: ${{inputs.release-target == 'wasm'}}
        working-directory: bindings/wasm
        run: |
          cargo release --no-tag --no-publish --no-push --no-confirm ${{ inputs.tag-base }} --execute

      - name: Set up Node.js
        uses: actions/setup-node@v2
        if: ${{inputs.release-target == 'wasm'}}
        with:
          node-version: '16.x'
          registry-url: 'https://registry.npmjs.org'

      - name: Bump Wasm npm package version
        if: ${{inputs.release-target == 'wasm'}}
        working-directory: bindings/wasm
        run: |
          npm version ${{ inputs.tag-base }}

      - name: Commit npm package version
        if: ${{inputs.release-target == 'wasm'}}
        run: |
          git add .
          if [[ $(git diff --stat --staged) == '' ]]; then
            echo 'repository unmodified'
            exit 1
          fi
          git commit -m "Bump npm package version"
          
      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v3 # TODO pin commit
        with:
          committer: GitHub <noreply@github.com>
          author: ${{ github.actor }} <${{ github.actor }}@users.noreply.github.com>
          branch: release/${{ inputs.tag-prefix }}${{ inputs.tag-base }}
          delete-branch: true
          title: 'Release ${{ inputs.tag-prefix }}${{ inputs.tag-base }}'
          body: |
            This automatically generated PR contains changes for the `${{ inputs.tag-prefix }}${{ inputs.tag-base }}` version.
            ${{inputs.pr-body-text}}
            If you discover any mistakes fix them with commits on this branch. If you want to abort the release simply close the PR.
          labels: |
            No changelog
      
