[package]
name = "identity_iota"
version = "0.7.0-alpha.3"
authors = ["IOTA Stiftung"]
edition = "2021"
homepage = "https://www.iota.org"
keywords = ["iota", "tangle", "identity", "did", "ssi"]
license = "Apache-2.0"
readme = "./README.md"
repository = "https://github.com/iotaledger/identity.rs"
rust-version = "1.62"
description = "Framework for Self-Sovereign Identity with IOTA DID."

[dependencies]
identity_core = { version = "=0.7.0-alpha.3", path = "../identity_core", default-features = false }
identity_credential = { version = "=0.7.0-alpha.3", path = "../identity_credential", features = ["validator"], default-features = false }
identity_did = { version = "=0.7.0-alpha.3", path = "../identity_did", default-features = false }
identity_iota_core = { version = "=0.7.0-alpha.3", path = "../identity_iota_core", default-features = false }
identity_resolver = { version = "=0.7.0-alpha.3", path = "../identity_resolver", default-features = false, optional = true }

[dev-dependencies]
anyhow = "1.0.64"
iota-client = { version = "2.0.1-rc.1", default-features = false, features = ["tls", "stronghold"] }
tokio = { version = "1.17.0", features = ["full"] }

[features]
default = ["revocation-bitmap", "client", "iota-client", "resolver"]

# Exposes the `IotaIdentityClient` and `IotaIdentityClientExt` traits.
client = ["identity_iota_core/client"]

# Enables the iota-client integration, the client trait implementations for it, and the `IotaClientExt` trait.
iota-client = ["identity_iota_core/iota-client", "identity_resolver?/iota"]

# Enables revocation with `RevocationBitmap2022`.
revocation-bitmap = [
  "identity_credential/revocation-bitmap",
  "identity_iota_core/revocation-bitmap",
  "identity_resolver?/revocation-bitmap",
]

# Enables support for the `Resolver`.
resolver = ["dep:identity_resolver"]

[package.metadata.docs.rs]
# To build locally:
# RUSTDOCFLAGS="--cfg docsrs" cargo +nightly doc --all-features --no-deps --workspace --open
all-features = true
rustdoc-args = ["--cfg", "docsrs"]
