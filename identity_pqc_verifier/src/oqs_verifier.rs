// Copyright 2024 Fondazione Links
// SPDX-License-Identifier: Apache-2.0

use identity_jose::jwk::Jwk;
use identity_jose::jwk::JwkParamsPQ;
use identity_jose::jws::SignatureVerificationError;
use identity_jose::jws::SignatureVerificationErrorKind;
use identity_jose::jws::VerificationInput;
use oqs::sig::Algorithm;
use oqs::sig::Sig;
use std::ops::Deref;

/// A verifier that can handle the [`Algorithm`] PQC algorithms.
#[derive(Debug)]
#[non_exhaustive]
pub struct OQSVerifier;

impl OQSVerifier {
  /// Verify a JWS signature secured with the on the [`Algorithm`] defined in liboqs.
  pub fn verify(input: VerificationInput, public_key: &Jwk, alg: Algorithm) -> Result<(), SignatureVerificationError> {
    // Obtain an ML-DSA-44 public key.
    let params: &JwkParamsPQ = public_key
      .try_pq_params()
      .map_err(|_| SignatureVerificationErrorKind::UnsupportedKeyType)?;

    let pk = identity_jose::jwu::decode_b64(params.public.as_str()).map_err(|_| {
      SignatureVerificationError::new(SignatureVerificationErrorKind::KeyDecodingFailure)
        .with_custom_message("could not decode 'pub' parameter from jwk")
    })?;

    oqs::init(); //TODO: check what this function does

    let scheme = Sig::new(alg).map_err(|_| {
      SignatureVerificationError::new(SignatureVerificationErrorKind::Unspecified)
        .with_custom_message("signature scheme init failed")
    })?;

    let public_key = scheme
      .public_key_from_bytes(&pk)
      .ok_or(SignatureVerificationError::new(
        SignatureVerificationErrorKind::KeyDecodingFailure,
      ))?;

    let signature = scheme
      .signature_from_bytes(input.decoded_signature.deref())
      .ok_or(SignatureVerificationErrorKind::InvalidSignature)?;

    Ok(
      scheme
        .verify(&input.signing_input, signature, public_key)
        .map_err(|_| SignatureVerificationErrorKind::InvalidSignature)?,
    )
  }
}

#[cfg(test)]
mod tests {
    use oqs::sig::{Algorithm, Sig};
 
 
  #[test]
  fn sig_and_verify(){
    // generate random keypair
 
    oqs::init();
    let scheme = Sig::new(Algorithm::Dilithium2).unwrap();
 
    let (pk, sk) = scheme.keypair().unwrap();
    
    println!("Public key: {:?}", pk);

    let message = b"prova";
 
    let signature = scheme.sign(message, &sk).unwrap();
    println!("Signature: {:?}", signature);
    
    scheme.verify(message, &signature, &pk).unwrap();
   
    assert!(true)
  }

  const NOBLE_PUB_KEY: &[u8] = &[209,131,252,5,180,196,210,99,214,113,221,246,97,94,45,90,147,37,94,209,79,92,237,114,51,54,130,154,79,33,98,96,191,71,153,75,190,253,62,58,150,79,104,91,158,229,105,8,225,119,116,50,82,210,92,222,12,144,125,161,148,117,26,164,102,25,66,244,178,254,2,102,55,30,117,234,109,151,178,151,210,207,39,49,117,70,253,178,235,237,183,189,145,197,116,235,132,236,147,66,175,236,234,202,65,218,212,200,75,101,214,178,48,207,197,174,75,224,183,47,3,2,14,192,88,205,166,60,19,219,67,158,147,148,229,16,85,244,8,123,51,44,42,0,18,179,136,193,62,255,100,129,228,14,125,53,191,127,8,32,109,223,155,223,98,60,46,159,40,134,144,253,121,89,107,74,32,58,88,181,237,6,76,223,215,193,87,212,210,190,236,243,72,107,209,66,245,239,133,99,145,174,59,151,2,93,88,145,240,105,46,158,213,210,204,71,209,221,62,105,113,75,189,63,120,125,151,124,58,79,133,104,200,87,63,33,60,142,21,37,3,102,254,135,210,13,208,155,32,222,162,63,127,17,10,60,46,228,234,59,75,57,97,117,229,245,89,9,55,52,69,73,223,50,70,70,16,64,118,51,105,196,18,96,247,43,24,139,146,137,67,31,101,82,42,214,177,41,125,216,202,5,212,40,97,244,145,180,236,206,170,124,192,126,227,254,86,45,6,221,200,235,143,228,162,88,248,155,36,169,45,147,111,2,249,186,179,123,150,221,223,176,131,170,216,129,241,222,5,195,255,241,1,39,129,119,100,217,175,249,18,3,131,89,231,46,70,21,147,72,89,162,194,25,113,78,213,130,66,218,42,149,228,205,36,59,108,57,189,171,200,57,246,37,6,143,159,84,129,205,132,132,146,41,237,76,93,103,1,3,130,61,116,171,16,82,255,107,113,223,89,37,69,184,161,83,11,92,160,201,154,5,10,200,17,197,39,25,91,32,129,143,6,226,146,172,97,191,197,204,29,128,226,60,17,9,171,178,78,148,17,30,96,223,77,180,156,31,236,59,236,168,238,113,252,59,209,154,227,149,204,167,63,210,45,75,173,247,126,247,216,232,74,216,15,158,109,89,88,17,54,117,165,4,52,2,10,148,27,185,24,124,182,175,145,38,45,224,236,106,94,156,195,120,200,94,114,17,62,64,188,50,11,161,82,115,12,147,222,94,90,123,227,88,129,58,140,138,120,241,168,35,42,78,236,9,196,213,180,60,229,99,127,252,154,61,45,174,1,148,92,215,9,130,50,239,143,181,3,34,13,79,51,63,49,157,64,86,121,88,213,225,116,159,155,48,155,84,199,254,148,247,93,48,119,249,71,241,109,144,82,8,14,116,4,41,146,112,20,251,30,211,8,123,164,59,217,231,4,66,70,103,247,224,232,37,131,212,51,212,82,131,166,252,184,190,115,238,165,212,37,53,156,173,97,254,90,43,179,232,165,38,99,72,174,70,247,163,73,162,225,233,73,98,89,225,128,148,172,206,211,249,0,160,242,242,121,5,148,202,251,62,17,220,89,101,80,183,204,186,241,28,17,231,43,2,71,167,92,111,240,166,110,0,47,188,75,251,35,72,148,115,23,157,35,165,132,252,232,57,12,60,41,104,192,57,143,227,45,199,13,146,33,176,234,160,246,21,65,195,231,98,255,146,118,50,49,11,119,175,129,12,63,52,162,90,143,152,32,58,137,61,169,23,247,85,228,85,157,238,57,61,40,220,183,240,171,169,241,246,112,59,255,221,9,19,204,39,80,105,96,85,199,183,91,137,180,52,29,194,5,32,45,51,30,197,26,28,81,130,141,28,138,35,123,236,36,202,72,0,40,109,12,61,175,252,60,216,42,178,95,12,73,188,129,191,235,69,0,153,88,10,103,248,210,20,238,197,94,213,186,32,55,80,194,128,199,45,83,199,51,237,18,88,217,38,102,231,4,106,208,209,170,54,103,189,97,148,141,218,114,196,178,40,66,238,75,43,130,86,183,10,39,228,225,69,91,39,11,93,181,61,157,149,2,32,23,67,78,212,117,45,26,226,21,220,169,201,41,114,44,130,240,47,152,115,54,243,240,98,186,195,120,110,151,182,10,19,24,71,168,162,216,225,5,68,39,12,189,26,37,196,25,151,61,242,247,121,107,32,6,72,44,147,186,133,50,93,255,157,186,147,161,163,219,99,35,236,180,226,11,40,154,56,132,19,106,252,209,231,85,234,80,244,211,234,128,123,99,130,210,16,51,13,65,212,230,196,113,152,47,206,7,166,37,129,105,80,40,85,12,246,204,117,162,178,65,17,185,7,135,216,102,108,125,233,133,227,96,100,142,100,16,189,148,47,17,87,47,154,170,55,9,178,118,231,61,253,138,204,161,195,95,99,211,120,67,255,26,134,227,191,126,112,16,72,148,240,198,215,40,29,229,32,167,153,78,105,56,166,56,23,28,175,132,68,198,172,123,192,192,245,201,203,223,108,207,192,180,105,148,123,149,88,229,80,134,130,190,195,124,107,184,28,106,76,234,125,104,250,159,134,226,23,74,66,110,132,164,32,130,121,223,89,5,8,55,196,210,91,44,196,17,209,86,53,65,193,179,108,118,87,232,92,2,4,214,191,235,127,189,53,209,145,40,234,27,70,105,50,129,147,39,153,42,211,146,76,243,203,146,86,7,116,195,77,27,24,106,243,190,3,23,174,109,219,52,45,190,245,47,164,11,201,63,170,3,117,59,59,254,232,197,248,79,40,157,131,3,30,30,103,179,167,25,11,207,122,215,31,190,0,109,81,151,4,200,209,178,48,29,115,103,159,211,54,220,124,70,205,216,178,215,114,37,249,169,40,252,137,7,21,222,205,211,57,117,210,17,253,1,100,80,33,184,110,205,29,7,225,235,122,53,214,95,169,215,185,53,24,199,155];
  const NOBLE_MSG: &[u8] = b"pq-idenity.rs";
  const NOBLE_SIGNATURE: &[u8] = &[141,47,4,215,33,246,2,43,59,126,229,138,192,102,222,241,120,4,117,30,149,66,16,134,102,28,160,233,112,241,187,171,114,202,3,252,199,61,39,69,107,64,81,26,220,52,23,34,173,156,62,184,110,116,105,44,158,190,112,146,115,116,50,76,102,245,132,34,127,218,40,133,194,120,5,91,11,36,36,120,162,172,25,158,9,232,162,158,120,29,19,134,220,139,62,2,173,225,163,108,85,166,142,72,18,134,116,4,45,143,232,32,134,107,10,249,252,149,156,136,24,10,21,184,109,132,239,193,100,37,206,215,19,23,253,112,193,97,147,117,236,253,49,230,50,225,2,219,40,91,189,131,206,55,70,18,170,160,32,178,95,244,163,228,34,232,66,240,106,56,44,212,220,221,152,56,169,247,40,215,231,200,142,81,137,68,84,248,216,238,237,201,253,36,150,97,152,189,183,238,51,194,123,102,129,115,10,176,184,25,151,152,107,182,91,3,57,4,234,102,85,67,219,76,197,42,156,210,70,189,245,154,25,55,146,25,254,40,124,31,222,237,165,203,136,133,188,201,62,61,76,137,238,209,16,242,45,130,239,29,161,57,73,48,73,43,91,246,131,56,34,48,101,55,182,160,8,158,226,64,32,144,104,82,166,71,153,246,230,216,112,50,186,83,156,98,4,2,32,28,85,5,235,190,5,9,225,31,117,90,235,49,222,8,223,218,229,173,106,196,67,202,198,6,17,239,146,30,31,197,232,198,215,206,219,246,250,54,57,217,195,179,142,165,177,2,48,217,42,42,213,37,134,252,2,65,234,182,26,53,191,39,93,137,75,25,54,223,68,1,53,74,40,214,83,9,255,89,140,94,111,197,83,225,244,10,64,185,193,44,10,121,231,231,131,185,84,83,181,181,222,118,224,30,116,121,124,56,170,86,108,94,131,56,53,126,5,150,75,48,229,142,91,36,21,137,17,81,186,52,162,192,230,9,113,129,85,224,140,72,14,252,154,153,52,62,49,38,131,81,98,224,24,54,42,59,139,234,215,170,107,69,74,196,142,66,75,5,253,124,34,239,152,234,10,79,90,203,139,3,49,159,6,10,93,92,46,160,7,197,155,107,190,183,251,135,54,159,153,124,100,94,173,36,62,147,155,88,197,21,66,61,94,87,238,14,240,65,86,192,20,217,93,33,28,131,103,74,226,30,60,158,50,132,169,79,140,8,120,1,20,165,30,23,211,46,103,122,212,212,63,213,5,23,79,37,42,100,239,7,246,110,119,253,152,141,228,164,138,165,114,163,149,198,169,130,195,210,229,130,45,107,108,244,11,168,129,110,179,130,203,240,53,221,217,213,183,97,215,58,8,139,48,26,184,8,98,103,173,185,186,242,203,107,145,115,128,154,251,38,226,96,201,233,39,237,234,80,118,100,94,52,202,114,150,56,10,207,66,61,103,15,7,231,62,153,214,196,207,1,183,199,120,88,141,60,104,147,208,123,242,245,141,106,39,227,25,41,24,9,154,195,252,104,118,243,194,230,114,234,119,32,18,104,186,54,210,218,167,100,86,13,83,135,114,163,166,218,200,162,78,241,167,215,172,113,199,197,68,21,92,28,87,36,89,121,19,255,104,14,147,14,76,132,50,116,24,139,199,154,31,220,32,76,185,130,217,219,178,0,248,132,186,133,192,208,119,26,235,164,90,240,128,207,15,18,160,46,86,236,79,108,90,232,64,27,15,186,189,139,81,193,105,220,9,248,239,50,219,237,186,218,66,229,25,194,28,4,78,229,179,36,252,142,20,200,67,118,33,68,51,187,177,165,227,18,155,133,140,145,144,33,44,36,174,5,74,201,171,70,213,129,123,53,212,240,173,91,238,170,62,195,110,208,14,185,195,201,213,113,26,107,26,164,168,71,209,21,104,241,41,52,190,8,223,222,66,8,183,154,121,207,172,35,98,204,133,146,221,225,126,170,80,133,192,28,106,194,149,228,217,220,99,140,43,135,45,154,243,118,196,33,241,0,48,128,90,82,169,218,157,170,31,228,134,249,218,12,22,150,191,171,4,27,213,97,85,255,215,71,25,253,236,70,43,16,178,155,44,121,161,177,102,46,213,217,136,53,230,97,225,89,201,87,107,147,231,133,12,34,76,122,175,189,233,216,78,183,1,95,207,53,131,111,177,63,150,18,78,8,248,19,35,224,52,196,165,37,107,80,131,62,55,251,34,182,112,233,136,87,116,95,235,50,200,226,14,24,165,143,114,53,37,186,4,237,159,9,88,49,29,79,12,84,143,224,165,254,72,53,100,64,157,74,10,13,122,222,208,170,42,123,211,16,200,73,145,202,85,145,82,241,110,90,200,221,187,109,125,251,29,50,157,141,169,46,178,102,58,235,48,68,28,59,102,119,237,177,95,232,180,34,241,65,88,69,188,52,176,75,99,145,65,189,47,63,57,140,82,142,210,52,44,252,228,201,163,6,220,91,247,170,90,205,248,198,138,105,190,214,168,191,225,253,32,254,54,125,15,9,27,75,26,5,115,132,23,252,81,160,78,112,185,245,127,229,83,164,21,105,207,29,3,58,164,220,85,102,27,87,99,92,44,170,189,139,129,155,1,22,50,54,176,119,122,64,231,251,82,26,113,14,32,150,72,122,159,223,115,232,52,236,41,5,224,188,248,195,8,139,76,200,214,188,39,169,73,90,150,206,218,97,192,228,215,115,202,42,253,121,10,47,191,145,35,145,66,120,36,105,11,84,132,31,98,154,48,17,102,58,162,43,90,139,62,146,90,92,138,69,231,20,96,236,233,6,227,58,21,160,253,27,138,167,39,37,181,167,131,1,146,237,31,134,66,119,144,206,27,109,183,117,86,208,241,180,168,234,143,100,26,166,67,168,75,52,221,128,51,111,118,25,168,88,240,61,97,180,112,2,162,34,198,136,147,126,159,116,174,109,60,25,141,11,51,217,35,121,115,241,179,56,90,135,138,5,126,223,252,105,155,126,173,61,198,121,112,168,111,147,85,80,87,43,210,242,102,14,106,156,3,55,31,29,219,149,154,161,67,193,37,70,126,167,64,21,53,144,202,53,177,246,223,6,205,107,5,180,93,44,63,96,189,183,22,55,217,121,64,41,103,94,185,247,100,41,130,99,200,248,68,62,178,8,174,55,34,241,121,239,137,53,229,187,152,30,53,12,182,128,167,243,72,114,250,19,161,212,183,151,3,140,78,222,251,86,112,66,188,16,111,188,106,215,126,228,24,100,141,65,58,52,188,170,82,41,155,80,182,95,73,237,133,137,246,15,60,88,43,250,112,110,25,38,173,58,88,218,101,234,45,52,159,73,58,40,94,20,107,75,181,142,151,182,117,90,3,229,96,195,59,57,153,141,135,235,213,177,167,151,153,164,216,46,121,236,221,229,170,207,3,118,17,138,214,151,132,91,209,154,200,122,50,6,47,121,84,186,62,51,136,124,189,174,24,248,35,137,158,11,79,170,183,160,61,47,179,52,170,15,8,5,156,63,53,140,139,77,76,165,97,143,253,255,192,219,128,6,57,15,134,3,19,214,107,206,145,74,104,58,248,176,197,100,73,173,189,16,240,74,115,198,51,43,100,185,63,125,83,200,187,123,118,81,23,168,55,163,92,13,193,56,12,176,147,84,151,243,105,230,61,78,166,225,34,132,221,201,225,57,203,162,98,181,62,206,137,205,100,162,181,123,41,16,40,242,212,212,18,162,166,170,26,222,19,122,125,22,62,206,182,62,234,12,59,96,41,61,215,254,84,144,20,53,229,75,25,196,28,118,3,19,161,252,186,238,147,53,204,10,153,144,48,45,148,33,7,216,98,209,236,194,147,76,111,80,100,225,184,75,163,98,167,25,169,58,151,183,60,71,200,104,208,161,192,70,184,99,176,216,128,28,25,205,252,106,176,107,13,157,77,32,234,60,114,119,111,237,250,179,138,159,160,90,143,82,29,183,117,190,122,4,245,164,125,145,24,128,31,215,226,74,234,59,122,184,247,222,64,96,113,169,250,190,176,68,158,215,231,173,221,41,59,229,120,184,218,139,127,202,145,154,157,85,219,48,102,193,141,148,245,212,94,231,47,171,203,78,147,95,207,102,51,180,27,244,59,251,128,171,222,227,141,85,226,244,7,44,206,123,108,69,85,193,158,98,228,5,18,192,70,35,86,255,5,136,214,117,192,200,97,251,171,183,233,163,30,172,68,231,41,175,84,94,166,126,91,145,157,196,190,145,197,144,176,247,97,53,139,185,131,211,106,14,248,167,119,112,243,234,64,19,202,135,115,245,86,89,3,118,44,123,70,64,69,202,158,218,132,84,183,41,87,106,241,152,76,238,208,106,179,154,231,163,236,43,139,162,113,189,216,247,177,139,54,145,19,193,207,225,180,67,108,16,110,60,88,238,35,109,246,53,60,134,200,21,151,117,131,31,174,223,32,227,244,105,53,207,195,25,249,181,177,80,122,101,200,48,1,237,79,242,172,134,164,222,66,28,173,130,86,153,193,154,60,86,107,30,157,222,109,203,120,102,229,27,184,1,27,201,225,18,15,59,117,11,62,36,243,214,17,38,51,229,156,189,66,138,80,220,27,164,170,115,147,181,254,178,160,249,197,228,18,2,165,143,67,226,214,217,69,210,116,79,15,3,71,232,237,100,228,106,141,94,181,118,85,17,125,238,45,182,125,69,155,255,31,207,210,193,115,98,92,66,131,241,173,147,246,125,107,105,21,150,8,32,175,72,168,21,21,222,141,236,117,183,98,44,2,124,166,150,232,132,226,41,144,96,27,234,3,61,113,69,52,18,171,1,29,41,33,29,189,146,155,15,37,252,33,174,143,32,95,157,39,142,98,194,86,76,224,124,173,237,23,217,9,111,115,244,22,100,230,229,100,183,96,76,146,105,90,194,61,165,89,206,57,187,212,60,154,224,223,102,19,243,161,141,195,208,200,43,111,226,107,162,13,116,170,181,197,128,230,9,65,34,31,240,167,151,107,90,130,50,94,140,251,176,20,174,247,23,129,78,175,85,233,124,216,45,147,76,125,123,180,216,238,217,188,153,109,88,223,150,124,9,39,180,83,59,99,230,108,235,182,213,8,48,235,110,236,152,190,226,214,158,190,17,140,175,219,139,133,15,134,244,229,254,89,115,104,6,234,210,158,235,201,125,50,95,39,183,102,215,101,171,146,84,167,120,150,150,43,42,114,41,178,214,22,61,239,214,28,84,46,220,17,26,45,51,73,106,162,197,205,209,212,218,223,9,35,39,82,83,93,95,103,110,111,115,129,155,169,180,188,190,196,209,216,243,34,41,66,90,99,100,116,133,144,159,181,185,190,219,239,250,7,13,18,29,69,71,72,76,91,93,157,163,174,177,226,240,0,0,0,0,0,0,0,0,0,0,0,0,0,0,13,34,50,66];

  #[test]
  fn verify_noble_pq_signature(){

    oqs::init();
    let scheme = Sig::new(Algorithm::MlDsa44).unwrap();

    let pk = scheme.public_key_from_bytes(NOBLE_PUB_KEY).unwrap();
    let signature = scheme.signature_from_bytes(NOBLE_SIGNATURE).unwrap();

    scheme.verify(NOBLE_MSG, &signature, &pk).unwrap();

    assert!(true)
  }
}
 
