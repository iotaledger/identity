[package]
name = "identity_storage"
version = "1.6.0-alpha"
authors.workspace = true
edition.workspace = true
homepage.workspace = true
keywords = ["iota", "storage", "identity", "kms"]
license.workspace = true
readme = "./README.md"
repository.workspace = true
description = "Abstractions over storage for cryptographic keys used in DID Documents"

[dependencies]
anyhow = { version = "1.0.82" }
async-trait = { version = "0.1.64", default-features = false }
bcs = { version = "0.1.4", optional = true }
bls12_381_plus = { workspace = true, optional = true }
fastcrypto = { git = "https://github.com/MystenLabs/fastcrypto", rev = "2f502fd8570fe4e9cff36eea5bbd6fef22002898", package = "fastcrypto", optional = true }
futures = { version = "0.3.27", default-features = false, features = ["async-await"] }
identity_core = { version = "=1.6.0-alpha", path = "../identity_core", default-features = false }
identity_credential = { version = "=1.6.0-alpha", path = "../identity_credential", default-features = false, features = ["credential", "presentation", "revocation-bitmap"] }
identity_did = { version = "=1.6.0-alpha", path = "../identity_did", default-features = false }
identity_document = { version = "=1.6.0-alpha", path = "../identity_document", default-features = false }
identity_iota_core = { version = "=1.6.0-alpha", path = "../identity_iota_core", default-features = false, optional = true }
identity_verification = { version = "=1.6.0-alpha", path = "../identity_verification", default-features = false }
iota-crypto = { version = "0.23.2", default-features = false, features = ["ed25519", "random"], optional = true }
json-proof-token = { workspace = true, optional = true }
k256 = { version = "0.13.3", default-features = false, features = ["std", "ecdsa", "ecdsa-core", "jwk"], optional = true }
p256 = { version = "0.13.2", default-features = false, features = ["std", "ecdsa", "ecdsa-core", "jwk"], optional = true }
rand = { version = "0.8.5", default-features = false, features = ["std", "std_rng"], optional = true }
seahash = { version = "4.1.0", default-features = false }
secret-storage = { git = "https://github.com/iotaledger/secret-storage.git", default-features = false, tag = "v0.3.0", optional = true }
serde.workspace = true
serde_json.workspace = true
thiserror.workspace = true
tokio = { version = "1.43", default-features = false, features = ["macros", "sync"], optional = true }
zkryptium = { workspace = true, optional = true }

[target.'cfg(not(target_arch = "wasm32"))'.dependencies]
identity_iota_interaction = { version = "=1.6.0-alpha", path = "../identity_iota_interaction", optional = true }

[target.'cfg(target_arch = "wasm32")'.dependencies]
identity_iota_interaction = { version = "=1.6.0-alpha", path = "../identity_iota_interaction", default-features = false, optional = true }

[dev-dependencies]
identity_credential = { version = "=1.6.0-alpha", path = "../identity_credential", features = ["revocation-bitmap"] }
identity_ecdsa_verifier = { version = "=1.6.0-alpha", path = "../identity_ecdsa_verifier", default-features = false, features = ["es256"] }
identity_eddsa_verifier = { version = "=1.6.0-alpha", path = "../identity_eddsa_verifier", default-features = false, features = ["ed25519"] }
once_cell = { version = "1.18", default-features = false }
tokio = { version = "1.43", default-features = false, features = ["macros", "sync", "rt"] }

[features]
default = ["iota-document", "memstore"]
# Exposes in-memory implementations of the storage traits intended exclusively for testing.
memstore = ["dep:tokio", "dep:rand", "dep:iota-crypto", "dep:fastcrypto"]
# Enables `Send` + `Sync` bounds for the storage traits.
send-sync-storage = ["identity_iota_core?/send-sync-client-ext", "secret-storage?/send-sync-storage"]
# Implements the JwkStorageDocumentExt trait for IotaDocument
iota-document = ["dep:identity_iota_core"]
# enables support to sign via storage
storage-signer = [
  "identity_iota_core?/iota-client",
  "dep:secret-storage",
  "dep:identity_iota_interaction",
  "dep:fastcrypto",
  "dep:bcs",
]
# Enables JSON Proof Token & BBS+ related features
jpt-bbs-plus = [
  "identity_credential/jpt-bbs-plus",
  "dep:zkryptium",
  "dep:bls12_381_plus",
  "dep:json-proof-token",
]
# Enables integration with IOTA Keytool
keytool = [
  "dep:identity_iota_interaction",
  "identity_iota_interaction/keytool",
  "k256",
  "p256",
  "dep:fastcrypto",
]

[lints]
workspace = true
